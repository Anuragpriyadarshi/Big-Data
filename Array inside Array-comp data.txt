package sparkpack
import org.apache.spark.sql.functions._

import org.apache.spark._
import org.apache.spark.sql.functions._
import sys.process._
import org.apache.spark.SparkConf
import org.apache.spark.sql._
import org.apache.spark.sql.types._
import scala.io.Source._


object sparkobj {

case class schema(txnno:String,txndate:String,custno:String,amount:String,category:String,product:String,city:String,state:String,spendby:String)
def main(args:Array[String]):Unit=

{

		val conf = new SparkConf().setAppName("First").setMaster("local[*]")
				val sc = new SparkContext(conf)

				sc.setLogLevel("ERROR")
				val spark = SparkSession
				.builder()
				.getOrCreate()		

				import spark.implicits._

				val df=spark.read.format("json").option("multiline","true").load("file:///C:/data/complexjson/zeyoc.json")
				df.show()
				df.printSchema()

				val df1=df.withColumn("Students",expr("explode(Students)"))
				df1.show()
				df1.printSchema()

				val df2=df1.withColumn("tools",expr("explode(Students.tools)"))
				df2.show()
				df2.printSchema()

				val df3=df2.select(
						col("orgname"),
						col("trainer"),
						col("Students.age"),
						col("Students.name"),
						col("tools")

						)
				df3.show()
				df3.printSchema()

}
}